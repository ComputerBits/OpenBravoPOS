ALTER TABLE PAYMENTS DROP FOREIGN KEY PAYMENTS_FK_2;  

ALTER TABLE PRODUCTS_CAT DROP FOREIGN KEY PRODUCTS_CAT_FK_1;  

ALTER TABLE PRODUCTS_COM DROP FOREIGN KEY PRODUCTS_COM_FK_1;  

ALTER TABLE PRODUCTS_COM DROP FOREIGN KEY PRODUCTS_COM_FK_2;  

ALTER TABLE STOCKCURRENT DROP FOREIGN KEY STOCKCURRENT_FK_1;  

ALTER TABLE STOCKDIARY DROP FOREIGN KEY STOCKDIARY_FK_1;  

ALTER TABLE PRODUCTSOUT DROP FOREIGN KEY PRODUCTSOUT_FK_1;  

ALTER TABLE PRODUCTSOUT DROP FOREIGN KEY PRODUCTSOUT_FK_2;  

ALTER TABLE PRODUCTSOUT DROP FOREIGN KEY PRODUCTSOUT_FK_3;  

ALTER TABLE TICKETS DROP FOREIGN KEY TICKETS_FK_1;  

-- ----------------------------------------------------------------------- 
-- TABLE EDITTICKETS 
-- ----------------------------------------------------------------------- 
DROP TABLE EDITTICKETS; 

-- ----------------------------------------------------------------------- 
-- TABLE LIBREPOS 
-- ----------------------------------------------------------------------- 
DROP TABLE LIBREPOS;

ALTER TABLE PRODUCTS DROP FOREIGN KEY PRODUCTS_FK_1;  

ALTER TABLE PRODUCTS DROP FOREIGN KEY PRODUCTS_FK_2;  

ALTER TABLE TICKETS DROP FOREIGN KEY TICKETS_FK_2;  

-- ----------------------------------------------------------------------- 
-- TABLE RECEIPTS 
-- ----------------------------------------------------------------------- 
CREATE TABLE RECEIPTS (
    ID VARCHAR(255) NOT NULL,
    MONEY VARCHAR(255) NOT NULL,
    PRIMARY KEY (ID)
);

INSERT INTO RECEIPTS (ID, MONEY) SELECT TICKETID, MONEY FROM TICKETS;

-- ----------------------------------------------------------------------- 
-- TABLE PAYMENTS 
-- ----------------------------------------------------------------------- 
CREATE TABLE _PAYMENTS (
    ID VARCHAR(255) NOT NULL,
    RECEIPT VARCHAR(255) NOT NULL,
    PAYMENT VARCHAR(255) NOT NULL,
    TOTAL DOUBLE NOT NULL,
    PRIMARY KEY (ID)
);

INSERT INTO _PAYMENTS (ID, RECEIPT, PAYMENT, TOTAL) SELECT ID, TICKETID, PAYMENT, TOTAL FROM PAYMENTS;

DROP TABLE PAYMENTS;

CREATE TABLE PAYMENTS (
    ID VARCHAR(255) NOT NULL,
    RECEIPT VARCHAR(255) NOT NULL,
    PAYMENT VARCHAR(255) NOT NULL,
    TOTAL DOUBLE NOT NULL,
    PRIMARY KEY (ID)
);

INSERT INTO PAYMENTS (ID, RECEIPT, PAYMENT, TOTAL) SELECT ID, RECEIPT, PAYMENT, TOTAL FROM _PAYMENTS;

DROP TABLE _PAYMENTS;

CREATE INDEX PAYMENTS_INX_1 ON PAYMENTS (PAYMENT);

-- ----------------------------------------------------------------------- 
-- TABLE PRODUCTS 
-- ----------------------------------------------------------------------- 
CREATE TABLE _PRODUCTS (
    ID VARCHAR(255) NOT NULL,
    REFERENCE VARCHAR(255) NOT NULL,
    CODE VARCHAR(255) NOT NULL,
    CODETYPE VARCHAR(255),
    NAME VARCHAR(255) NOT NULL,
    PRICEBUY DOUBLE NOT NULL,
    PRICESELL DOUBLE NOT NULL,
    CATEGORY VARCHAR(255) NOT NULL,
    TAX VARCHAR(255) NOT NULL,
    STOCKCOST DOUBLE,
    STOCKVOLUME DOUBLE,
    IMAGE MEDIUMBLOB,
    ISCOM BIT NOT NULL,
    ISSCALE BIT NOT NULL,
    PRIMARY KEY (ID)
);

INSERT INTO _PRODUCTS (ID, REFERENCE, CODE, CODETYPE, NAME, PRICEBUY, PRICESELL, CATEGORY, TAX, STOCKCOST, STOCKVOLUME, IMAGE, ISCOM, ISSCALE) SELECT REFERENCE, REFERENCE, CODE, CODETYPE, NAME, PRICEBUY, PRICESELL, CATEGORY, TAX, STOCKCOST, STOCKVOLUME, IMAGE, ISCOM, ISSCALE FROM PRODUCTS;

DROP TABLE PRODUCTS; 

CREATE TABLE PRODUCTS (
    ID VARCHAR(255) NOT NULL,
    REFERENCE VARCHAR(255) NOT NULL,
    CODE VARCHAR(255) NOT NULL,
    CODETYPE VARCHAR(255),
    NAME VARCHAR(255) NOT NULL,
    PRICEBUY DOUBLE NOT NULL,
    PRICESELL DOUBLE NOT NULL,
    CATEGORY VARCHAR(255) NOT NULL,
    TAX VARCHAR(255) NOT NULL,
    STOCKCOST DOUBLE,
    STOCKVOLUME DOUBLE,
    IMAGE MEDIUMBLOB,
    ISCOM BIT NOT NULL,
    ISSCALE BIT NOT NULL,
    PRIMARY KEY (ID)
);
INSERT INTO PRODUCTS (ID, REFERENCE, CODE, CODETYPE, NAME, PRICEBUY, PRICESELL, CATEGORY, TAX, STOCKCOST, STOCKVOLUME, IMAGE, ISCOM, ISSCALE) SELECT ID, REFERENCE, CODE, CODETYPE, NAME, PRICEBUY, PRICESELL, CATEGORY, TAX, STOCKCOST, STOCKVOLUME, IMAGE, ISCOM, ISSCALE FROM _PRODUCTS;

DROP TABLE _PRODUCTS; 

CREATE UNIQUE INDEX PRODUCTS_INX_1 ON PRODUCTS (CODE);  

CREATE UNIQUE INDEX PRODUCTS_NAME_INX ON PRODUCTS (NAME);

-- ----------------------------------------------------------------------- 
-- TABLE PRODUCTS_CAT 
-- ----------------------------------------------------------------------- 
CREATE TABLE _PRODUCTS_CAT (
    PRODUCT VARCHAR(255) NOT NULL,
    CATORDER INTEGER,
    PRIMARY KEY (PRODUCT)
);

INSERT INTO _PRODUCTS_CAT (PRODUCT, CATORDER) SELECT REFERENCE, CATORDER FROM PRODUCTS_CAT;

DROP TABLE PRODUCTS_CAT;

CREATE TABLE PRODUCTS_CAT (
    PRODUCT VARCHAR(255) NOT NULL,
    CATORDER INTEGER,
    PRIMARY KEY (PRODUCT)
);

INSERT INTO PRODUCTS_CAT (PRODUCT, CATORDER) SELECT PRODUCT, CATORDER FROM _PRODUCTS_CAT;

DROP TABLE _PRODUCTS_CAT;

CREATE INDEX PRODUCTS_CAT_INX_1 ON PRODUCTS_CAT (CATORDER);  

-- ----------------------------------------------------------------------- 
-- TABLE PRODUCTS_COM 
-- ----------------------------------------------------------------------- 
CREATE TABLE _PRODUCTS_COM (
    PRODUCT VARCHAR(255) NOT NULL,
    PRODUCT2 VARCHAR(255) NOT NULL,
    PRIMARY KEY (PRODUCT, PRODUCT2)
);

INSERT INTO _PRODUCTS_COM (PRODUCT, PRODUCT2) SELECT REFERENCE, REFERENCE2 FROM PRODUCTS_COM;

DROP TABLE PRODUCTS_COM;

CREATE TABLE PRODUCTS_COM (
    PRODUCT VARCHAR(255) NOT NULL,
    PRODUCT2 VARCHAR(255) NOT NULL,
    PRIMARY KEY (PRODUCT, PRODUCT2)
);

INSERT INTO PRODUCTS_COM (PRODUCT, PRODUCT2) SELECT PRODUCT, PRODUCT2 FROM _PRODUCTS_COM;

DROP TABLE _PRODUCTS_COM;

-- ----------------------------------------------------------------------- 
-- TABLE TICKETLINES 
-- ----------------------------------------------------------------------- 
CREATE TABLE TICKETLINES (
    TICKET VARCHAR(255) NOT NULL,
    LINE INTEGER NOT NULL,
    PRODUCT VARCHAR(255),
    NAME VARCHAR(255),
    ISCOM BIT,
    UNITS DOUBLE NOT NULL,
    PRICE DOUBLE NOT NULL,
    TAXID VARCHAR(255) NOT NULL,
    PRIMARY KEY (TICKET, LINE)
);

INSERT INTO TICKETLINES (TICKET, LINE, PRODUCT, NAME, ISCOM, UNITS, PRICE, TAXID) SELECT TICKETID, TICKETLINE, PRODUCT, NAME, ISCOM, UNITS, PRICE, TAXID  FROM PRODUCTSOUT;

DROP TABLE PRODUCTSOUT;

-- ----------------------------------------------------------------------- 
-- TABLE TICKETS 
-- ----------------------------------------------------------------------- 
CREATE TABLE _TICKETS (
    ID VARCHAR(255) NOT NULL,
    TICKETID INTEGER NOT NULL,
    DATENEW DATETIME NOT NULL,
    PERSON VARCHAR(255) NOT NULL,
    STATUS INTEGER DEFAULT 0 NOT NULL,
    PRIMARY KEY (ID)
);

INSERT INTO _TICKETS(ID, TICKETID, DATENEW, PERSON, STATUS) SELECT TICKETID, TICKETID, DATENEW, PERSON, STATUS FROM TICKETS;

DROP TABLE TICKETS;

CREATE TABLE TICKETS (
    ID VARCHAR(255) NOT NULL,
    TICKETID INTEGER NOT NULL,
    DATENEW DATETIME NOT NULL,
    PERSON VARCHAR(255) NOT NULL,
    STATUS INTEGER DEFAULT 0 NOT NULL,
    PRIMARY KEY (ID)
);

INSERT INTO TICKETS (ID, TICKETID, DATENEW, PERSON, STATUS) SELECT ID, TICKETID, DATENEW, PERSON, STATUS FROM _TICKETS;

DROP TABLE _TICKETS;

CREATE INDEX TICKETS_INX_1 ON TICKETS (DATENEW);  

ALTER TABLE PRODUCTS ADD CONSTRAINT PRODUCTS_FK_1 FOREIGN KEY (CATEGORY) REFERENCES CATEGORIES (ID);  

ALTER TABLE PRODUCTS ADD CONSTRAINT PRODUCTS_FK_2 FOREIGN KEY (TAX) REFERENCES TAXES (ID);  

ALTER TABLE TICKETS ADD CONSTRAINT TICKETS_FK_2 FOREIGN KEY (PERSON) REFERENCES PEOPLE (ID);  

-- ----------------------------------------------------------------------- 
-- TABLE APPLICATIONS 
-- ----------------------------------------------------------------------- 
CREATE TABLE APPLICATIONS (
    ID VARCHAR(255) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    VERSION VARCHAR(255) NOT NULL,
    PRIMARY KEY (ID)
);

INSERT INTO APPLICATIONS (ID, NAME, VERSION) VALUES($APP_ID{}, $APP_NAME{}, '2.00');

-- ----------------------------------------------------------------------- 
-- TABLE CUSTOMERS 
-- ----------------------------------------------------------------------- 
CREATE TABLE CUSTOMERS (
    ID VARCHAR(255) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    ADDRESS VARCHAR(255),
    NOTES VARCHAR(255),
    VISIBLE BOOLEAN NOT NULL,
    PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX CUSTOMERS_NAME_INX ON CUSTOMERS(NAME);

-- ----------------------------------------------------------------------- 
-- TABLE RESERVATION_CUSTOMERS 
-- ----------------------------------------------------------------------- 
CREATE TABLE RESERVATION_CUSTOMERS (
    ID VARCHAR(255) NOT NULL,
    CUSTOMER VARCHAR(255) NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT RES_CUST_FK_1 FOREIGN KEY (ID) REFERENCES RESERVATIONS(ID),
    CONSTRAINT RES_CUST_FK_2 FOREIGN KEY (CUSTOMER) REFERENCES CUSTOMERS(ID)
);

ALTER TABLE PAYMENTS ADD CONSTRAINT PAYMENTS_FK_RECEIPT FOREIGN KEY (RECEIPT) REFERENCES RECEIPTS (ID);  

CREATE UNIQUE INDEX PRODUCTS_INX_0 ON PRODUCTS (REFERENCE);  

ALTER TABLE PRODUCTS_CAT ADD CONSTRAINT PRODUCTS_CAT_FK_1 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS (ID);  

ALTER TABLE PRODUCTS_COM ADD CONSTRAINT PRODUCTS_COM_FK_1 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS (ID);  

ALTER TABLE PRODUCTS_COM ADD CONSTRAINT PRODUCTS_COM_FK_2 FOREIGN KEY (PRODUCT2) REFERENCES PRODUCTS (ID);  

ALTER TABLE RECEIPTS ADD CONSTRAINT RECEIPTS_FK_MONEY FOREIGN KEY (MONEY) REFERENCES CLOSEDCASH (MONEY);  

ALTER TABLE STOCKCURRENT ADD CONSTRAINT STOCKCURRENT_FK_1 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS (ID);  

ALTER TABLE STOCKDIARY ADD CONSTRAINT STOCKDIARY_FK_1 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS (ID);  

ALTER TABLE TICKETLINES ADD CONSTRAINT TICKETLINES_FK_2 FOREIGN KEY (PRODUCT) REFERENCES PRODUCTS (ID);  

ALTER TABLE TICKETLINES ADD CONSTRAINT TICKETLINES_FK_3 FOREIGN KEY (TAXID) REFERENCES TAXES (ID);  

ALTER TABLE TICKETLINES ADD CONSTRAINT TICKETLINES_FK_TICKET FOREIGN KEY (TICKET) REFERENCES TICKETS (ID);  

ALTER TABLE TICKETS ADD CONSTRAINT TICKETS_FK_ID FOREIGN KEY (ID) REFERENCES RECEIPTS (ID);  

DELETE FROM SHAREDTICKETS;
